{"ast":null,"code":"import _objectSpread from\"D:/New folder/frontend-assignment/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import{propertyData}from'../assets/propertyData';import{polygonData}from'../assets/polygonData';import'./PropertyFiltering.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PropertyFiltering=()=>{const[filters,setFilters]=useState({types:{Commercial:true,Administrative:true,Clinical:true},area:{min:0,max:300},price:{min:0,max:30000000}});const[hoveredUnit,setHoveredUnit]=useState(null);const[visibleUnits,setVisibleUnits]=useState([]);const svgRef=useRef(null);useEffect(()=>{if(!svgRef.current)return;const filteredUnits=propertyData.filter(unit=>{if(!filters.types[unit.type])return false;if(unit.area<filters.area.min||unit.area>filters.area.max)return false;if(unit.price<filters.price.min||unit.price>filters.price.max)return false;return true;}).map(unit=>unit.id);setVisibleUnits(filteredUnits);const polygons=svgRef.current.querySelectorAll('.property-polygon');polygons.forEach(polygon=>{const unitId=parseInt(polygon.getAttribute('data-id'));polygon.style.opacity=filteredUnits.includes(unitId)?'1':'0.2';polygon.style.pointerEvents=filteredUnits.includes(unitId)?'auto':'none';});},[filters]);const handleTypeChange=type=>{setFilters(prev=>_objectSpread(_objectSpread({},prev),{},{types:_objectSpread(_objectSpread({},prev.types),{},{[type]:!prev.types[type]})}));};const handleRangeChange=(category,boundary,value)=>{setFilters(prev=>_objectSpread(_objectSpread({},prev),{},{[category]:_objectSpread(_objectSpread({},prev[category]),{},{[boundary]:value})}));};const handlePolygonHover=unitId=>{const unit=propertyData.find(u=>u.id===unitId);if(unit)setHoveredUnit(unit);};const handlePolygonLeave=()=>{setHoveredUnit(null);};const formatPrice=price=>{if(price===0)return\"0.0\";return(price/1000000).toFixed(1);};return/*#__PURE__*/_jsxs(\"div\",{className:\"property-filter-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"header-label\",children:\"Type\"}),/*#__PURE__*/_jsx(\"span\",{className:\"header-value\",children:\"Availability\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"type-button commercial \".concat(filters.types.Commercial?'active':''),onClick:()=>handleTypeChange('Commercial'),children:\"Commercial\"}),/*#__PURE__*/_jsx(\"button\",{className:\"type-button administrative \".concat(filters.types.Administrative?'active':''),onClick:()=>handleTypeChange('Administrative'),children:\"Administrative\"}),/*#__PURE__*/_jsx(\"button\",{className:\"type-button clinical \".concat(filters.types.Clinical?'active':''),onClick:()=>handleTypeChange('Clinical'),children:\"Clinical\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"header-label\",children:\"Area\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"header-value\",children:[filters.area.min,\".0 - \",filters.area.max,\".0 Sq.m\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"slider-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"300\",value:filters.area.min,onChange:e=>handleRangeChange('area','min',parseInt(e.target.value)),className:\"range-slider\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"300\",value:filters.area.max,onChange:e=>handleRangeChange('area','max',parseInt(e.target.value)),className:\"range-slider\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"header-label\",children:\"Price\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"header-value\",children:[\"LE \",formatPrice(filters.price.min),\"M - \",formatPrice(filters.price.max),\"M\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"slider-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"30000000\",step:\"1000000\",value:filters.price.min,onChange:e=>handleRangeChange('price','min',parseInt(e.target.value)),className:\"range-slider\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"30000000\",step:\"1000000\",value:filters.price.max,onChange:e=>handleRangeChange('price','max',parseInt(e.target.value)),className:\"range-slider\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"floor-plan-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"floor-plan-wrapper\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",children:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"icon\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\",clipRule:\"evenodd\"})})}),/*#__PURE__*/_jsx(\"button\",{className:\"view-button\",children:/*#__PURE__*/_jsxs(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"icon\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\",children:[/*#__PURE__*/_jsx(\"path\",{d:\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"}),/*#__PURE__*/_jsx(\"circle\",{cx:\"12\",cy:\"12\",r:\"3\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"svg-container\",children:/*#__PURE__*/_jsxs(\"svg\",{width:\"100%\",height:\"100%\",viewBox:\"0 0 400 350\",className:\"floor-plan-svg\",ref:svgRef,children:[/*#__PURE__*/_jsx(\"pattern\",{id:\"grid\",width:\"20\",height:\"20\",patternUnits:\"userSpaceOnUse\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M 20 0 L 0 0 0 20\",fill:\"none\",stroke:\"#e0e0e0\",strokeWidth:\"0.5\"})}),/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"url(#grid)\"}),polygonData.map(polygon=>/*#__PURE__*/_jsx(\"polygon\",{points:polygon.points,fill:polygon.fill,stroke:\"#666\",strokeWidth:\"1\",className:\"property-polygon\",\"data-id\":polygon.id,\"data-type\":polygon.type,onMouseEnter:()=>handlePolygonHover(polygon.id),onMouseLeave:handlePolygonLeave},polygon.id))]})}),hoveredUnit&&/*#__PURE__*/_jsxs(\"div\",{className:\"unit-details-popup\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"unit-details-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"unit-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"unit-title\",children:[\"Unit \",hoveredUnit.id]}),/*#__PURE__*/_jsx(\"span\",{className:\"unit-status \".concat(hoveredUnit.status.toLowerCase()),children:hoveredUnit.status})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"unit-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-label\",children:\"Unit Type\"}),/*#__PURE__*/_jsx(\"span\",{className:\"info-value\",children:hoveredUnit.type})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-label\",children:\"Total Area\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"info-value\",children:[hoveredUnit.area,\" M\\xB2\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-label\",children:\"Price\"}),/*#__PURE__*/_jsx(\"span\",{className:\"info-value\",children:hoveredUnit.price>0?\"\".concat(formatPrice(hoveredUnit.price),\"M EGP\"):'0 EGP'})]})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"callback-button\",children:\"Callback\"})]})]})})]});};export default PropertyFiltering;","map":{"version":3,"names":["React","useState","useEffect","useRef","propertyData","polygonData","jsx","_jsx","jsxs","_jsxs","PropertyFiltering","filters","setFilters","types","Commercial","Administrative","Clinical","area","min","max","price","hoveredUnit","setHoveredUnit","visibleUnits","setVisibleUnits","svgRef","current","filteredUnits","filter","unit","type","map","id","polygons","querySelectorAll","forEach","polygon","unitId","parseInt","getAttribute","style","opacity","includes","pointerEvents","handleTypeChange","prev","_objectSpread","handleRangeChange","category","boundary","value","handlePolygonHover","find","u","handlePolygonLeave","formatPrice","toFixed","className","children","concat","onClick","onChange","e","target","step","xmlns","viewBox","fill","fillRule","d","clipRule","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","width","height","ref","patternUnits","points","onMouseEnter","onMouseLeave","status","toLowerCase"],"sources":["D:/New folder/frontend-assignment/src/components/PropertyFiltering.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { propertyData } from '../assets/propertyData';\r\nimport { polygonData } from '../assets/polygonData';\r\nimport './PropertyFiltering.css';\r\n\r\nconst PropertyFiltering = () => {\r\n    const [filters, setFilters] = useState({\r\n    types: {\r\n      Commercial: true,\r\n      Administrative: true,\r\n      Clinical: true\r\n    },\r\n    area: {\r\n      min: 0,\r\n      max: 300\r\n    },\r\n    price: {\r\n      min: 0,\r\n      max: 30000000\r\n    }\r\n  });\r\n  \r\n  const [hoveredUnit, setHoveredUnit] = useState(null);\r\n  \r\n  const [visibleUnits, setVisibleUnits] = useState([]);\r\n  \r\n  const svgRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    if (!svgRef.current) return;\r\n    \r\n    const filteredUnits = propertyData.filter(unit => {\r\n      if (!filters.types[unit.type]) return false;\r\n      \r\n      if (unit.area < filters.area.min || unit.area > filters.area.max) return false;\r\n      \r\n      if (unit.price < filters.price.min || unit.price > filters.price.max) return false;\r\n      \r\n      return true;\r\n    }).map(unit => unit.id);\r\n    \r\n    setVisibleUnits(filteredUnits);\r\n    \r\n    const polygons = svgRef.current.querySelectorAll('.property-polygon');\r\n    polygons.forEach(polygon => {\r\n      const unitId = parseInt(polygon.getAttribute('data-id'));\r\n      polygon.style.opacity = filteredUnits.includes(unitId) ? '1' : '0.2';\r\n      polygon.style.pointerEvents = filteredUnits.includes(unitId) ? 'auto' : 'none';\r\n    });\r\n    \r\n  }, [filters]);\r\n  \r\n  const handleTypeChange = (type) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      types: {\r\n        ...prev.types,\r\n        [type]: !prev.types[type]\r\n      }\r\n    }));\r\n  };\r\n  \r\n  const handleRangeChange = (category, boundary, value) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      [category]: {\r\n        ...prev[category],\r\n        [boundary]: value\r\n      }\r\n    }));\r\n  };\r\n  \r\n  const handlePolygonHover = (unitId) => {\r\n    const unit = propertyData.find(u => u.id === unitId);\r\n    if (unit) setHoveredUnit(unit);\r\n  };\r\n  \r\n  const handlePolygonLeave = () => {\r\n    setHoveredUnit(null);\r\n  };\r\n  \r\n  const formatPrice = (price) => {\r\n    if (price === 0) return \"0.0\";\r\n    return (price / 1000000).toFixed(1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"property-filter-container\">\r\n\r\n      <div className=\"filter-panel\">\r\n\r\n        <div className=\"filter-section\">\r\n          <div className=\"filter-header\">\r\n            <span className=\"header-label\">Type</span>\r\n            <span className=\"header-value\">Availability</span>\r\n          </div>\r\n          \r\n          <button\r\n            className={`type-button commercial ${filters.types.Commercial ? 'active' : ''}`}\r\n            onClick={() => handleTypeChange('Commercial')}\r\n          >\r\n            Commercial\r\n          </button>\r\n          \r\n          <button\r\n            className={`type-button administrative ${filters.types.Administrative ? 'active' : ''}`}\r\n            onClick={() => handleTypeChange('Administrative')}\r\n          >\r\n            Administrative\r\n          </button>\r\n          \r\n          <button\r\n            className={`type-button clinical ${filters.types.Clinical ? 'active' : ''}`}\r\n            onClick={() => handleTypeChange('Clinical')}\r\n          >\r\n            Clinical\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"filter-section\">\r\n          <div className=\"filter-header\">\r\n            <span className=\"header-label\">Area</span>\r\n            <span className=\"header-value\">\r\n              {filters.area.min}.0 - {filters.area.max}.0 Sq.m\r\n            </span>\r\n          </div>\r\n          \r\n          <div className=\"slider-container\">\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"300\"\r\n              value={filters.area.min}\r\n              onChange={(e) => handleRangeChange('area', 'min', parseInt(e.target.value))}\r\n              className=\"range-slider\"\r\n            />\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"300\"\r\n              value={filters.area.max}\r\n              onChange={(e) => handleRangeChange('area', 'max', parseInt(e.target.value))}\r\n              className=\"range-slider\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"filter-section\">\r\n          <div className=\"filter-header\">\r\n            <span className=\"header-label\">Price</span>\r\n            <span className=\"header-value\">\r\n              LE {formatPrice(filters.price.min)}M - {formatPrice(filters.price.max)}M\r\n            </span>\r\n          </div>\r\n          \r\n          <div className=\"slider-container\">\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"30000000\"\r\n              step=\"1000000\"\r\n              value={filters.price.min}\r\n              onChange={(e) => handleRangeChange('price', 'min', parseInt(e.target.value))}\r\n              className=\"range-slider\"\r\n            />\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"30000000\"\r\n              step=\"1000000\"\r\n              value={filters.price.max}\r\n              onChange={(e) => handleRangeChange('price', 'max', parseInt(e.target.value))}\r\n              className=\"range-slider\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"floor-plan-container\">\r\n        <div className=\"floor-plan-wrapper\">\r\n\r\n          <button className=\"back-button\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path fillRule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n          </button>\r\n          \r\n\r\n          <button className=\"view-button\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n              <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\r\n              <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n            </svg>\r\n          </button>\r\n          \r\n          <div className=\"svg-container\">\r\n            <svg \r\n              width=\"100%\" \r\n              height=\"100%\" \r\n              viewBox=\"0 0 400 350\" \r\n              className=\"floor-plan-svg\"\r\n              ref={svgRef}\r\n            >\r\n\r\n              <pattern id=\"grid\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\">\r\n                <path d=\"M 20 0 L 0 0 0 20\" fill=\"none\" stroke=\"#e0e0e0\" strokeWidth=\"0.5\"/>\r\n              </pattern>\r\n              <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\r\n              \r\n\r\n              {polygonData.map(polygon => (\r\n                <polygon\r\n                  key={polygon.id}\r\n                  points={polygon.points}\r\n                  fill={polygon.fill}\r\n                  stroke=\"#666\"\r\n                  strokeWidth=\"1\"\r\n                  className=\"property-polygon\"\r\n                  data-id={polygon.id}\r\n                  data-type={polygon.type}\r\n                  onMouseEnter={() => handlePolygonHover(polygon.id)}\r\n                  onMouseLeave={handlePolygonLeave}\r\n                />\r\n              ))}\r\n            </svg>\r\n          </div>\r\n          \r\n\r\n          {hoveredUnit && (\r\n            <div className=\"unit-details-popup\">\r\n              <div className=\"unit-details-content\">\r\n                <div className=\"unit-header\">\r\n                  <h3 className=\"unit-title\">Unit {hoveredUnit.id}</h3>\r\n                  <span className={`unit-status ${hoveredUnit.status.toLowerCase()}`}>\r\n                    {hoveredUnit.status}\r\n                  </span>\r\n                </div>\r\n                \r\n                <div className=\"unit-info\">\r\n                  <div className=\"info-row\">\r\n                    <span className=\"info-label\">Unit Type</span>\r\n                    <span className=\"info-value\">{hoveredUnit.type}</span>\r\n                  </div>\r\n                  \r\n                  <div className=\"info-row\">\r\n                    <span className=\"info-label\">Total Area</span>\r\n                    <span className=\"info-value\">{hoveredUnit.area} M²</span>\r\n                  </div>\r\n                  \r\n                  <div className=\"info-row\">\r\n                    <span className=\"info-label\">Price</span>\r\n                    <span className=\"info-value\">\r\n                      {hoveredUnit.price > 0 ? `${formatPrice(hoveredUnit.price)}M EGP` : '0 EGP'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <button className=\"callback-button\">\r\n                Callback\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropertyFiltering;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}